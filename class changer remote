local rp = game:GetService("ReplicatedStorage")
local class = rp:WaitForChild("Change")

local ss = game:GetService("ServerStorage")
local Classes = ss:WaitForChild("Classes")
local debouce = false
class.OnServerEvent:Connect(function(Player,className)
	local loadout = className
	if not debouce then
		debouce = true
		
		
		local Backpack = Player.StarterGear
		local selection = Classes:FindFirstChild(className)
		local Menu = Player.PlayerGui.Classchangerbyseb.Menu
		local Frame = Player.PlayerGui.Classchangerbyseb.Frame
		local Mainframe = Player.PlayerGui.Classchangerbyseb.MainFrame
		if selection then
			local moveset = Classes:FindFirstChild(className):clone()
			moveset.Parent = Backpack



			if loadout == "Musician" then
				for _, tool in ipairs(Player.StarterGear:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes 

				for _, tool in ipairs(Player.Backpack:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes Equipped Tool
				wait()

				local BackpackI = Player.StarterGear.Musician
				for i,v in pairs(BackpackI) do
					v.Parent = Backpack
				end
				wait()
				wait()
				local selfdestruct = BackpackI:Destroy()
				wait(10)
				debouce = false


			elseif loadout == "Musketeer" then
				for _, tool in ipairs(Player.StarterGear:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes 

				for _, tool in ipairs(Player.Backpack:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes Equipped Tool
				wait()

				local BackpackII = Player.StarterGear.Musketeer
				for i,v in pairs(BackpackII) do
					v.Parent = Backpack
				end
				wait()
				wait()
				local selfdestructI = BackpackII:Destroy()
				wait(10)
				debouce = false



			elseif loadout == "Artillery" then
				for _, tool in ipairs(Player.StarterGear:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes 

				for _, tool in ipairs(Player.Backpack:GetChildren()) do
					if tool:IsA("Tool") then
						tool:Destroy()
					end
				end --Deletes all tools from Backpack
				if Player.Character:FindFirstChildOfClass("Tool") then
					Player.Character:FindFirstChildOfClass("Tool"):Destroy()
				end --Deletes Equipped Tool
				wait()

				local BackpackIII = Player.StarterGear.Artillery
				for i,v in pairs(BackpackIII) do
					v.Parent = Backpack
				end
				wait()
				wait()
				local selfdestructI = BackpackIII:Destroy()
				wait(10)
				debouce = false



			elseif loadout == "Officer" then
				if Player:IsInGroup(10539007)then
					for _, tool in ipairs(Player.StarterGear:GetChildren()) do
						if tool:IsA("Tool") then
							tool:Destroy()
						end
					end --Deletes all tools from Backpack
					if Player.Character:FindFirstChildOfClass("Tool") then
						Player.Character:FindFirstChildOfClass("Tool"):Destroy()
					end --Deletes 

					for _, tool in ipairs(Player.Backpack:GetChildren()) do
						if tool:IsA("Tool") then
							tool:Destroy()
						end
					end --Deletes all tools from Backpack
					if Player.Character:FindFirstChildOfClass("Tool") then
						Player.Character:FindFirstChildOfClass("Tool"):Destroy()
					end --Deletes Equipped Tool
					wait()
					local BackpackIIII = Player.StarterGear.Officer
					for i,v in pairs(BackpackIIII) do
						v.Parent = Backpack
					end
					wait()
					wait()
					local selfdestructI = BackpackIIII:Destroy()

				else Player.PlayerGui.Denied.Frame.Visible = true
					wait(2)
					Player.PlayerGui.Denied.Frame.Visible = false
					wait ()
					wait(10)
					debouce = false
			end
	end 
				
		end
		Player:LoadCharacter()
		Player.PlayerGui.Classchangerbyseb.MainFrame.TextLabels.currentClass.Text = "Current class: "..loadout
		Mainframe.Visible = false
		wait(10)
		debouce = false
	end
end)


